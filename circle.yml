version: 2.1
jobs:
  build:
    docker:
      - image: <<parameters.docker_image>>
    parameters:
        tox_env:
            type: string
        docker_image:
            type: string
    environment:
      MOZ_HEADLESS: 1
    steps:
      - checkout
      - run:
          name: Update system
          command: |
            sudo sed -i '/jessie-updates/d' /etc/apt/sources.list
            sudo sed -i '/jessie-backports/d' /etc/apt/sources.list
            sudo apt-get update
            sudo apt-get install -y libgtk3.0-cil-dev libasound2 libasound2 libdbus-glib-1-2 libdbus-1-3 libgtk2.0-0
      - run:
          name: Install geckodriver
          command: |
            wget https://github.com/mozilla/geckodriver/releases/download/v0.26.0/geckodriver-v0.26.0-linux64.tar.gz
            tar xzf geckodriver-v0.26.0-linux64.tar.gz
            sudo mv geckodriver /usr/local/bin/geckodriver
            which geckodriver
      - run:
          name: Install new firefox
          command: |
            wget https://archive.mozilla.org/pub/firefox/releases/70.0.1/linux-x86_64/en-US/firefox-70.0.1.tar.bz2
            tar jxf firefox-70.0.1.tar.bz2
            export PATH="$(pwd)/firefox/:$PATH"
      - run:
          name: Sync submodules
          command: git submodule sync
      - run:
          name: Update submodules
          command: git submodule update --init
      - run:
          name: Setup tox
          command: virtualenv venv && venv/bin/pip install tox
      - run:
          name: Run tests
          command: |
            echo "$PATH"
            export PATH="$(pwd)/firefox/:$PATH"
            echo "$PATH"
            which geckodriver
            geckodriver --version
            which firefox
            firefox --version
            venv/bin/pip freeze
            mkdir -p /tmp/coverage/$CIRCLE_SHA1
            venv/bin/tox -e <<parameters.tox_env>>
            if [ -e .coverage.* ]; then
                cp .coverage.* /tmp/coverage/$CIRCLE_SHA1/.
            fi
      - persist_to_workspace:
          root: /tmp
          paths:
              - coverage

  coverage:
    docker:
      - image: <<parameters.docker_image>>
    parameters:
        docker_image:
            type: string
    steps:
      - checkout
      - run:
          name: Update system
          command: |
            # The jessie-updates and jessie-backports areas are now removed from the repositories. So
            # the lines corresponding to those areas have to be removed to fix the resulting errors.
            # This can be removed after upgrading to the image based on Debian Stretch.
            sudo sed -i '/jessie-updates/d' /etc/apt/sources.list
            sudo sed -i '/jessie-backports/d' /etc/apt/sources.list
            sudo apt-get update
            sudo pip install --upgrade pip
            sudo pip install --upgrade virtualenv
            virtualenv venv
            source venv/bin/activate
            pip install -r test_requirements.txt
      - attach_workspace:
          at: /tmp/workspace
      - run:
          command: |
              source venv/bin/activate
              coverage combine /tmp/workspace/coverage/$CIRCLE_SHA1/
              coverage report

  deploy:
    docker:
      - image: <<parameters.docker_image>>
    parameters:
        docker_image:
            type: string
        dist_type:
            type: string
    steps:
      - checkout
      - restore_cache:
          key: dependencies-{{ checksum "circle.yml" }}-{{ checksum "setup.py" }}
      - run:
          name: Install dependencies
          command: |
            virtualenv venv
            . venv/bin/activate
            pip install -U pip twine wheel
      - save_cache:
          key: dependencies-{{ checksum "circle.yml" }}-{{ checksum "setup.py" }}
          paths:
            - "venv"
      - run:
          name: Verify commit is tagged and tag matches version
          command: |
            . venv/bin/activate
            python setup.py verify_tag
      - run:
          name: Initialize .pypirc
          command: |
            echo -e "[pypi]" >> ~/.pypirc
            echo -e "username = opencraft" >> ~/.pypirc
            echo -e "password = $PYPI_PASSWORD" >> ~/.pypirc
      - run:
          name: Create packages
          command: |
            python setup.py <<parameters.dist_type>>
      - run:
          name: Upload to pypi
          command: |
            . venv/bin/activate
            twine upload dist/*

workflows:
  version: 2
  build_and_deploy:
    jobs:
      - build:
          name: py27-quality
          tox_env: py27-quality
          docker_image: circleci/python:2.7.14-browsers
          filters:
            tags:
              only: /.*/
      - build:
          name: py27-unit
          tox_env: py27-unit
          docker_image: circleci/python:2.7.14-browsers
          filters:
            tags:
              only: /.*/
      - build:
          name: py27-integration
          tox_env: py27-integration
          docker_image: circleci/python:2.7.14-browsers
          filters:
            tags:
              only: /.*/
      - coverage:
          name: py27-coverage
          docker_image: circleci/python:2.7.14
          filters:
            tags:
              only: /.*/
          requires:
              - py27-quality
              - py27-unit
              - py27-integration
      - deploy:
          name: py27-deploy-sdist
          docker_image: circleci/python:2.7.14
          dist_type: sdist
          requires:
            - py27-coverage
          filters:
            tags:
              only: /v[0-9]+(\.[0-9]+)*/
            branches:
              ignore: /.*/
      - deploy:
          name: py27-deploy-bdist_wheel
          docker_image: circleci/python:2.7.14
          dist_type: bdist_wheel
          requires:
            - py27-coverage
          filters:
            tags:
              only: /v[0-9]+(\.[0-9]+)*/
            branches:
              ignore: /.*/

      - build:
          name: py35-quality
          tox_env: py35-quality
          docker_image: circleci/python:3.5-browsers
          filters:
            tags:
              only: /.*/
      - build:
          name: py35-unit
          tox_env: py35-unit
          docker_image: circleci/python:3.5-browsers
          filters:
            tags:
              only: /.*/
      - build:
          name: py35-integration
          tox_env: py35-integration
          docker_image: circleci/python:3.5-browsers
          filters:
            tags:
              only: /.*/
      - coverage:
          name: py35-coverage
          docker_image: circleci/python:3.5
          filters:
            tags:
              only: /.*/
          requires:
              - py35-quality
              - py35-unit
              - py35-integration
      - deploy:
          name: py35-deploy-bdist_wheel
          docker_image: circleci/python:3.5
          dist_type: bdist_wheel
          requires:
            - py35-coverage
          filters:
            tags:
              only: /v[0-9]+(\.[0-9]+)*/
            branches:
              ignore: /.*/
